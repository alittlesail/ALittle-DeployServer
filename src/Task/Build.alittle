
namespace DeployServer;

public struct QDownloadBuild
{
    int task_id;
    int create_time;
    int create_index;
}

[HttpDownload]
public await static HandleDownloadBuild(ALittle.IHttpReceiver sender, QDownloadBuild msg) : string, int
{
    var task = g_TaskManager.GetTask(msg.task_id);
    assert(task != null, "任务不存在");

    var build = task.GetBuild(msg.create_time, msg.create_index);
    assert(build != null, "构建信息不存在");

    return task.GetBuildPath(build.create_time, build.create_index), 0;
}

public struct QPreSeeBuild
{
    int task_id;
    int create_time;
    int create_index;
}

public struct APreSeeBuild
{
    List<string> log_list;
    int create_time;
    int create_index;
}

[Http]
public await static HandlePreSeeBuild(ALittle.IHttpReceiver sender, QPreSeeBuild msg) : APreSeeBuild
{
    var task = g_TaskManager.GetTask(msg.task_id);
    assert(task != null, "任务不存在");

    var build_info = task.GetBuild(msg.create_time, msg.create_index);
    assert(build_info != null, "构建信息不存在");

    var rsp = new APreSeeBuild();
    rsp.log_list = build_info.log_list;
    rsp.create_time = build_info.create_time;
    rsp.create_index = build_info.create_index;
    return rsp;
}